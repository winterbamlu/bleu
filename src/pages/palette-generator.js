// pages/palette-generator.js
import React, { useState, useRef } from "react";
import DisplayImage from "@/Components/DisplayImage";
import ColorThief from "colorthief";
import styles from "@/styles/Home.module.css";
import Link from 'next/link';
import Head from "next/head";

export default function PaletteGenerator() {
  const [uploadedImage, setUploadedImage] = useState(null);
  const [colorPalette, setColorPalette] = useState(null); 
  const canvasRef = useRef(); 

  const uploadImage = (e) => {
    const file = e.target.files[0];
    const reader = new FileReader();

    reader.onload = async (event) => {
      const img = new Image();

      img.onload = () => {
        const colorThief = new ColorThief();
        const colorPalette = colorThief.getPalette(img, 6);
        setUploadedImage(event.target.result);
        setColorPalette(colorPalette);
      };

      img.src = event.target.result;
    };

    reader.readAsDataURL(file);
  };

  const exportImageWithPalette = () => {
    const canvas = canvasRef.current;
    const ctx = canvas.getContext("2d");

    const img = new Image();
    img.src = uploadedImage;

    img.onload = () => {
      canvas.width = img.width;
      canvas.height = img.height + 100;

      ctx.drawImage(img, 0, 0);

      if (colorPalette) {
        const paletteHeight = 100;
        const boxWidth = canvas.width / colorPalette.length;

        colorPalette.forEach((color, index) => {
          ctx.fillStyle = `rgb(${color[0]}, ${color[1]}, ${color[2]})`;
          ctx.fillRect(index * boxWidth, img.height, boxWidth, paletteHeight);
        });
      }

      const link = document.createElement("a");
      link.download = "bleuprint palette-export.png";
      link.href = canvas.toDataURL("image/png");
      link.click();
    };
  };

  return (
    <>
      <Head>
        <title>Bleuprint Traces</title>
        <meta name="description" content="Generated by Bleuprint Traces"/>
        <meta name="viewpoint" content-="width=device-width, initial-scale=1"/>
        <link rel="icon" href="/favicon.ico"/>
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
          integrity="sha512-iecdLmaskl7CVkqkXNQ/ZH/XLlvWZOJyj7Yy7tcenmpD1ypASozpmT/E0iPtmFIB46ZmdtAc9eNBvH0H/ZpiBw=="
          crossorigin="anonymous"
          referrerpolicy="no-referrer"
        />
      </Head>
      <header>
      <Link href="/">
           <h1 style={{ cursor: "pointer"}}>BLEUPRINT</h1>
      </Link>
        <div className="input">
          <label htmlFor="file">
            <i className="fas fa-images"></i> Upload Image
          </label>
          <input type="file" id="file" hidden onChange={uploadImage} />
        </div>
      </header>

      <main className={styles.main}>
        <DisplayImage uploadedImage={uploadedImage} colorPalette={colorPalette} />

        {uploadedImage && (
          <>
            <button
              onClick={exportImageWithPalette}
              style={{
                backgroundColor: "#00CC98",
                color: "white",
                border: "none",
                borderRadius: "5px",
                padding: "10px 20px",
                fontSize: "16px",
                cursor: "pointer",
              }}
            >
              Export Palette
            </button>
            <canvas ref={canvasRef} style={{ display: "none" }}></canvas>
          </>
        )}
      </main>
    </>
  );
}
